import{_ as i}from"./2022-04-23-15-24-24-4a0025f3.js";import{_ as l,p as t,q as c,s,R as e,t as a,Y as o,n as r}from"./framework-e1bed10d.js";const h="/assets/2022-04-23-14-44-55-cfe503b8.png",d="/assets/2022-04-23-14-51-00-f880ae46.png",m="/assets/2022-04-23-15-09-37-687f022c.png",u="/assets/2022-04-23-15-28-33-462c6909.png",b="/assets/2022-04-23-15-33-33-1fbd7ade.png",p="/assets/2022-04-23-14-32-18-b31b8bb8.png",f="/assets/2022-04-23-15-42-35-b79399b1.png",_="/assets/2022-04-23-15-45-10-43a48708.png",v={},g=s("h2",{id:"fish的优点",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#fish的优点","aria-hidden":"true"},"#"),e(" fish的优点")],-1),k=s("p",null,[e("优点方面感觉说一大堆也没啥用，不如自己尝试一下看看"),s("br"),e(" 对我而言，fish吸引的地方是他的"),s("strong",null,"默认配置"),e("已经足够"),s("strong",null,"易用"),e("，后续只需修改主题与颜色方案就是一个很不错的shell"),s("br"),e(" 以下是fish吸引我从zsh转换到fish的优点")],-1),x=s("li",null,[s("strong",null,"更强大的命令补全与选项补全，你可以查看不同命令与选项的作用"),s("img",{src:h,alt:""}),s("img",{src:d,alt:""})],-1),y=s("strong",null,"更加简单易用的fish脚本（~/.config/fish/functions）",-1),z=s("br",null,null,-1),w=s("strong",null,"直接原因",-1),q=s("br",null,null,-1),V={href:"https://www.bilibili.com/video/BV1cu41117d9",target:"_blank",rel:"noopener noreferrer"},B=s("br",null,null,-1),C=o('<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// ~/.zshrc\n<span class="token builtin class-name">alias</span> <span class="token assign-left variable">fe</span><span class="token operator">=</span><span class="token string">&quot;vim <span class="token variable"><span class="token variable">`</span><span class="token function">du</span> <span class="token parameter variable">-a</span> ~/ <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span> <span class="token operator">|</span> fzf<span class="token variable">`</span></span>&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>但是我忘记了反引号在bash中会被当作命令执行，将这条命令写入zsh启动脚本.zshrc<br> 这就导致最终的效果成了在zsh启动的时候就 反引号内的命令就被执行了，fe这条命令别名中，vim打开的文件就是静态的了<br> 之后也尝试寻找了其他方案，但总感觉不如fish来得优雅与方便</p><blockquote><p>在fish下只需要在<code>~/.config/fish/functions</code>目录下创建fe.fish即可实现<br> 不仅便于管理，而且上手简单，只需要很少的基础就能定制一些属于自己的命令 <img src="'+m+'" alt=""></p></blockquote>',3),L=s("p",null,[s("strong",null,"fe的实现原理")],-1),N=o('<li><code>du -a ~/</code>检索检索<code>/home</code>目录下所有文件<br> 如图为<code>du -a ~/</code>的执行结果，但我们需要的只是第二列，因此通过管道传送给<code>awk &#39;{print $2}&#39;</code>，将第二列提取出来 <img src="'+u+'" alt=""></li><li>接着通过管道把家目录下的所有文件名都丢给<code>fzf</code>，<code>fzf</code>是一个实时的交互式的模糊搜索工具 <img src="'+b+'" alt=""></li>',2),E=s("br",null,null,-1),T=s("strong",null,"fe的视频演示效果",-1),F={href:"https://www.bilibili.com/video/BV1cu41117d9",target:"_blank",rel:"noopener noreferrer"},I=s("ul",null,[s("li",null,[e("缺点"),s("br"),e(" 可能只有语法与bash不同这一点，但某种意义上来说可能也是优点，fish的语法实际上比bash的语法更加“现代”，而且容易上手")])],-1),S=s("h2",{id:"fish-oh-my-fish",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#fish-oh-my-fish","aria-hidden":"true"},"#"),e(" fish&oh-my-fish")],-1),$=s("h3",{id:"安装fish与oh-my-fish",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装fish与oh-my-fish","aria-hidden":"true"},"#"),e(" 安装fish与oh-my-fish")],-1),R={href:"https://github.com/oh-my-fish/oh-my-fish#installation",target:"_blank",rel:"noopener noreferrer"},Y=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> fish
<span class="token function">curl</span> https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install <span class="token operator">|</span> fish
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更改默认shell" tabindex="-1"><a class="header-anchor" href="#更改默认shell" aria-hidden="true">#</a> 更改默认shell</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>chsh <span class="token parameter variable">-l</span>               //列出可用shell
chsh <span class="token parameter variable">-s</span> /bin/fish     //设置shell为/bin/fish
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>chsh设置的是命令行终端下的默认shell，使用图形化界面的用户应当同步更改终端模拟器(如kde的konsole)的配置方案 <img src="`+i+'" alt=""></p><h3 id="配置theme与color-scheme" tabindex="-1"><a class="header-anchor" href="#配置theme与color-scheme" aria-hidden="true">#</a> 配置theme与color-scheme</h3>',5),j={href:"https://github.com/oh-my-fish/oh-my-fish#installation",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md#bobthefish",target:"_blank",rel:"noopener noreferrer"},D=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>omz theme               // 列出可用的theme
omz <span class="token function">install</span> bobthefish  // 安装bobthefish主题
omz theme bobthefish    //使用bobthefish主题
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),G={href:"https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md#bobthefish",target:"_blank",rel:"noopener noreferrer"},H=o(`<blockquote><p>若采用了bobthefish主题，可以照着我的方案继续配置</p></blockquote><ul><li>bobthefish提供了多种Color scheme options，如：<code>dark</code>、<code>ligh</code>、<code>solarized</code>、<code>base16</code>、<code>zenburn</code>、<code>gruvbox</code>、<code>dracula</code>、<code>nord</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> theme_color_scheme nord     //设置 color_scheme 为node
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你可以通过下面这条命令查看该color_scheme在你的终端模拟器下的显示效果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bobthefish_display_colors
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),J=s("img",{src:p,alt:""},null,-1),K={href:"https://github.com/h-matsuo/fish-color-scheme-switcher",target:"_blank",rel:"noopener noreferrer"},M=o(`<p>这里的color-scheme指的是在输入命令的时候的高亮颜色方案，我觉得fish默认的color-scheme与我的终端模拟器搭配起来可读性很差，于是想要更改为可读性与美观性更高的color-scheme</p><ul><li><strong>安装</strong> 由于我们使用了omf,直接通过omf安装即可</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>omf <span class="token function">install</span> https://github.com/h-matsuo/fish-color-scheme-switcher
omf reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>使用方式</strong> fish环境下的tab键足以获取使用方法与说明 <img src="`+f+`" alt=""></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>scheme <span class="token function">ls</span>                   //列出可用color-scheme
scheme preview catppuccin   //预览catppuccin这一个方案
scheme <span class="token builtin class-name">set</span> catppuccin       //设置 color_scheme
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+'" alt=""></p><p>至此，你已经得到了一个足够强大与美观的fish shell</p>',7);function O(P,Q){const n=r("ExternalLinkIcon");return t(),c("div",null,[g,k,s("ul",null,[x,s("li",null,[y,z,e(" 这是我今天折腾fish的"),w,q,e(" 在观看了"),s("a",V,[e("fzf小技巧，dwm键位绑定以及neofetch"),a(n)]),e("这一个视频之后，我才了解到fish下可以通过将不同命令组合的方式来形成新的命令(视频中的fe通过将fzf、awk、du、vim组合，实现了查找/home下的所有文件，并通过vim打开)"),B,e(" 一开始我以为通过alias命令别名也能实现类似的效果，于是我将它改成了bash的语法，在.zshrc中写了一条命令别名")])]),C,s("blockquote",null,[L,s("ol",null,[N,s("li",null,[e("通过方向键选择文件，将文件名返回给vim即可打开"),E,T,e(" 时间：0:38 "),s("a",F,[e("fzf小技巧，dwm键位绑定以及neofetch"),a(n)])])])]),I,S,$,s("blockquote",null,[s("p",null,[e("配合官方文档"),s("a",R,[e("oh-my-fish"),a(n)]),e("食用更佳")])]),Y,s("ol",null,[s("li",null,[e("使用"),s("a",j,[e("omf"),a(n)]),e("配置theme 个人比较喜欢"),s("a",A,[e("bobthefish"),a(n)]),e("这一个主题，可以配置的东西很多，也可以更改颜色主题方案")])]),D,s("p",null,[e("使用bobthefish主题可能会遇到一些字符错乱问题，请查阅"),s("a",G,[e("bobthefish"),a(n)]),e("文档")]),H,s("p",null,[J,e(" 2. 使用"),s("a",K,[e("fish-color-scheme-switcher"),a(n)]),e("配置color-scheme")]),M])}const X=l(v,[["render",O],["__file","LinuxFishConfig.html.vue"]]);export{X as default};
