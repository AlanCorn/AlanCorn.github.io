import{_ as n,p as s,q as a,Y as t}from"./framework-e1bed10d.js";const p={},e=t(`<h2 id="一、登陆" tabindex="-1"><a class="header-anchor" href="#一、登陆" aria-hidden="true">#</a> <strong>一、登陆</strong></h2><p>自行登录TinkerCad平台</p><h2 id="二、连线" tabindex="-1"><a class="header-anchor" href="#二、连线" aria-hidden="true">#</a> <strong>二、连线</strong></h2><p><img src="https://img-blog.csdnimg.cn/2020121221232076.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FsYW5Db3JuXzAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ol><li>横向连通</li><li>纵向连通</li><li>芯片引脚，用于输出高低电平，高为亮，低为灭</li><li>这里有个GND，代表接地即电势视为0（低），连到上面那块</li></ol><h2 id="三、代码" tabindex="-1"><a class="header-anchor" href="#三、代码" aria-hidden="true">#</a> <strong>三、代码</strong></h2><p>只写了一种样例，自认为比较能让人开窍 实际上就是C语言；看不懂的那几句什么digitalwrite和delay模仿一下就行了</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">;</span>i<span class="token operator">&gt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  	<span class="token function">pinMode</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>			
<span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">;</span>i<span class="token operator">&gt;=</span><span class="token number">8</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>		<span class="token comment">//从两边亮，从中间灭</span>
  	<span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">//意思是往第i引脚写入高电平</span>
    <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token operator">-</span>i<span class="token punctuation">,</span>HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>	
  	<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>					<span class="token comment">//延迟三秒，会经常用到，一点都不延迟效果就是全部同时亮</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">13</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>		
  	<span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>		
    <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token operator">-</span>i<span class="token punctuation">,</span>LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>；					<span class="token comment">//这个是为了区别开每一种，之后再直接接着往后写就行了，框架可以复制。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终效果（本人拙劣的完成品） <img src="https://img-blog.csdnimg.cn/20201212214508368.gif#pic_center" alt="在这里插入图片描述"></p><h2 id="四、作业上传" tabindex="-1"><a class="header-anchor" href="#四、作业上传" aria-hidden="true">#</a> <strong>四、作业上传</strong></h2>`,10),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","GCHomework_1.html.vue"]]);export{r as default};
